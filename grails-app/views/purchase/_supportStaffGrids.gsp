<style>
.ui-jqgrid {
    max-width: 100% !important;
    width: auto !important;
}

.ui-jqgrid-view,
.ui-jqgrid-hdiv,
.ui-jqgrid-bdiv {
    width: auto !important;
}
</style>

<script type="text/javascript">

    var RoleType = Backbone.Model.extend();
    var RoleTypes = Backbone.Collection.extend({
        url:'../person/getRoleTypes',
        model:RoleType,
        initialize: function() {
            this.fetch({
                async:false
            });
        },
        listItems: function(){
            var listString = "";
            this.each(function(type) {
                listString += type.id + ":" + type.attributes.Name + ";";
            });
            return listString.substring(0, listString.length-1);
        }
    });

    var roleTypes = new RoleTypes();


    function resizeSupportGrid()
    {
        setTimeout( function() { // Need to wait for tab to show, else it won't resize properly
            var $targetGrid = $("#supportGrid");
            var jqGridWrapperId = "#gbox_" + $targetGrid.attr('id'); //here be dragons, this is     generated by jqGrid.
            $targetGrid.setGridWidth($(jqGridWrapperId).parent().width()-1); //perhaps add padding calculation here?
        }, 1 );
    }

    /*function addRowSupport() {
        var gridName='supportGrid';
        var supportGrid = $("#supportGrid");
        var rowId = (supportGrid.getGridParam("reccount")+1);

        supportGrid.jqGrid('addRowData', rowId, {}, 'first');

        supportGrid.jqGrid('editRow', rowId,true);
        $("table#" + gridName + " tr#" + rowId + " div.ui-inline-edit, " + "table#" + gridName + " tr#" + rowId + " div.ui-inline-del").hide();
        $("table#" + gridName + " tr#" + rowId + " div.ui-inline-save, " + "table#" + gridName + " tr#" + rowId + " div.ui-inline-cancel").show();
    }
    */
    function addRowSupport(objectId) {
        var gridName="supportGrid";
        var supportGrid = $("#supportGrid");
        var url="../person/editSupportStaffSinglePage";
        var defaults = {oper:'add', roleName:1, objectId:objectId};
        jQuery.ajax({
            async:false,
            url: url,
            dataType: 'json',
            data: defaults,
            contentType: 'application/json; charset=utf-8',
            success: function(data) {
                var newRowId = data.id;
                supportGrid.jqGrid('addRowData', newRowId, data.object , 'first');

                supportGrid.jqGrid('editRow', newRowId ,true);
                $("table#" + gridName + " tr#" + newRowId + " div.ui-inline-edit, " + "table#" + gridName + " tr#" + newRowId + " div.ui-inline-del").hide();
                $("table#" + gridName + " tr#" + newRowId + " div.ui-inline-save, " + "table#" + gridName + " tr#" + newRowId + " div.ui-inline-cancel").show();
            },
            error: function () { console.log('Error Adding Row'); }
        });
    }

    function loadSupportGrid(Id) {
        $("#supportGrid").GridUnload();
        $("#supportGrid").jqGrid({
            height: 'auto',
            shrinkToFit:true,
            autowidth: true,
//            datatype: 'local',
//            data: view.model.attributes.itemList.toJSON(),
//            editurl: 'clientArray',
            datatype:'json',
            url:"../person/listSupportStaffSinglePage?objectId=" + Id,

            editurl:'../person/editSupportStaffSinglePage?objectId=' + Id,
            width: '99%',
            pager: '#supportPager',
            colNames: ['','Role', 'Person', 'personId', 'E-Mail', 'Phone', 'Notes', 'id'],
            colModel: [
                {name:'actions', index:'actions', editable:false, search:false, required:false, sortable:false, width:50, fixed:true, hidden:false,
                    formatter: 'actions', formatoptions: {
                    afterSave: function(e) {
                        $("#supportGrid").trigger('reloadGrid');
                    },
                    delOptions:{zIndex:1500}
                }
                },
                {name:'roleName', width:100, editable:true, edittype:'select', editoptions: {value: roleTypes.listItems(),
                    dataInit:function(e){$(e).select2({
                        width: 200
                    })}
                }},
                {name:"person", width:70, formatter:personFormatter, unformat: personUnFormat, editable:true ,edittype:'select', editoptions: {value: personOptions.listItems(),
                    dataInit:function(e){
                        $(e).width(100).select2().select2('val', selectedPerson);
                    }
                }},
                {name:'personId', hidden:true, editable:false},
                {name:'email', width:50, editable:false},
                {name:'phone', width:50, editable:false},
                {name:'supportRoleNotes',editable:true,editrules:{required:false}, editoptions:{size:80}},
                {name:'id', hidden:true}
            ],
            loadComplete: function() {
                var width = document.getElementById("tabs").clientWidth;
                var $supportGrid = $("supportGrid");

                $supportGrid.setGridWidth(width); //perhaps add padding calculation here?
       //         console.log($(jqGridWrapperId).parent().width());

            },
            loadError: function (xhr, status, error) {
                alert('grid loading error' + error);
            }
        });

        var selectedPerson;
        function personUnFormat( cellvalue, options, cell){
            selectedPerson = $("#supportGrid").jqGrid('getCell', options.rowId, 'personId');
            //    console.log(selectedServer);
        }

        function personFormatter( cellvalue, options, cell){

            if(cell[1] != null) {
                //console.log("1");
                return "<a href='../person/show?id=" + cell[3] + "'>" + cell[2] + '</a>';
            }
            else if(cellvalue != null){
                if(cellvalue[0] != '<') {
                    return "<a href='../person/show?id=" + $("#supportGrid").jqGrid('getCell', options.rowId, 'personId') + "'>" + cellvalue + '</a>';
                }
                else {
                    //console.log("3");
                    return cellvalue;
                }
            }
            else
                return "";

        };

        jQuery("#supportGrid").jqGrid('navGrid',"#supportPager",{edit:false,add:false,del:false, search:false, refresh:false});
        jQuery("#supportGrid").jqGrid('navButtonAdd', '#supportPager', {
            id:'supportAddBtn',
            caption: 'Add Row',
            buttonicon: "ui-icon-plus",
            onClickButton: function() {
                addRowSupport(Id);
            }
        });
        $('#addSupportBtn').addClass('ui-state-disabled');
    }
</script>